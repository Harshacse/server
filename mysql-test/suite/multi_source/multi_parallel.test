#multi source parallel replication

--source include/not_embedded.inc
--let $rpl_server_count= 0

--connect (master1,127.0.0.1,root,,,$SERVER_MYPORT_1)
--connect (master2,127.0.0.1,root,,,$SERVER_MYPORT_2)
--connect (slave,127.0.0.1,root,,,$SERVER_MYPORT_3)

#save state
--let $par_thd= `select @@slave_parallel_threads;`

set global slave_parallel_threads=10;

--replace_result $SERVER_MYPORT_1 MYPORT_1
eval change master 'master1' to
master_port=$SERVER_MYPORT_1,
master_host='127.0.0.1',
master_user='root';

--replace_result $SERVER_MYPORT_2 MYPORT_2
eval change master 'master2' to
master_port=$SERVER_MYPORT_2,
master_host='127.0.0.1',
master_user='root';


#start all slaves

start all slaves;

set default_master_connection = 'master1';
--source include/wait_for_slave_to_start.inc

set default_master_connection = 'master2';
--source include/wait_for_slave_to_start.inc

--echo ## Slave status variable

set default_master_connection = 'master1';
show status like 'slave_running';

set default_master_connection = 'master2';
show status like 'slave_running';


--echo #master 1
--connection master1

--let $counter=10
while ($counter)
{
  #DDL statement
  create table t1(a int primary key);

  #non trans update statement
  insert into t1 values(1);
  insert into t1 values(2);

  drop table t1;
  --dec $counter
}
--save_master_pos

--connection slave

--sync_with_master 0,'master1'
--let $status= query_get_value(show slave 'master1' status, Slave_DDL_Events, 1)
--echo Slave_DDL_Events= $status;

--let $status= query_get_value(show slave 'master1' status, Slave_Non_Transactional_Events, 1)
--echo Slave_Non_Transactional_Events= $status;

--echo #master 2
--connection master2

--let $counter=9
while ($counter)
{
  #DDL statement
  create table t2(a int primary key);

  #non trans update statement
  insert into t2 values(1);
  insert into t2 values(2);

  drop table t2;
  --dec $counter
}
--save_master_pos

--connection slave
--sync_with_master 0,'master2'
--let $status= query_get_value(show slave 'master2' status, Slave_DDL_Events, 1)
--echo Slave_DDL_Events= $status;

--let $status= query_get_value(show slave 'master2' status, Slave_Non_Transactional_Events, 1)
--echo Slave_Non_Transactional_Events= $status;

# Cleanup
stop all slaves;
set default_master_connection = 'master1';
--source include/wait_for_slave_to_stop.inc

set default_master_connection = 'master2';
--source include/wait_for_slave_to_stop.inc

--eval set global slave_parallel_threads=$par_thd

--source include/reset_master_slave.inc
--disconnect slave
--connection master1
--source include/reset_master_slave.inc
--disconnect master1
--connection master2
--source include/reset_master_slave.inc
--disconnect master2
